name: PGO Benchmark

on:
  push:
    branches: [ main ]

jobs:
  build-and-benchmark:
    runs-on: ubuntu-24.04

    steps:
      - name: Check out source
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libbenchmark-dev g++

      - name: Clean previous profiling data
        run: |
          rm -rf ./*gcda
          rm -rf perf*
          rm -f div_bench.base div_bench.opt

      - name: Compile base binary
        run: |
          g++ -O3 -std=c++17 div_bench.cpp -lbenchmark -lpthread -o div_bench.base

      - name: Compile with PGO instrumentation
        run: |
          g++ -O3 -std=c++17 -fprofile-generate div_bench.cpp -lbenchmark -lpthread -o div_bench.opt

      - name: Generate profile data
        run: |
          ./div_bench.opt

      - name: Compile with PGO optimization
        run: |
          g++ -O3 -std=c++17 -fprofile-use div_bench.cpp -lbenchmark -lpthread -o div_bench.opt

      - name: Clean up perf traces
        run: |
          rm -rf perf*

      - name: Run benchmarks
        run: |
          echo "==================== Without Profile-Guided Optimization ===================="
          ./div_bench.base
          echo "==================== With Profile-Guided Optimization ===================="
          ./div_bench.opt

      #- name: Record perf data for comparison
      #  run: |
      #    perf record -o perf-division-pgo ./div_bench.opt
      #    perf record -o perf-division-base ./div_bench.base

      # Optionally, upload the perf data as artifacts:
      # - name: Upload perf data
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: perf-data
      #     path: |
      #       perf-division-pgo
      #       perf-division-base